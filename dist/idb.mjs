var e={d:(t,r)=>{for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{aZ:()=>o,OP:()=>c,Fj:()=>a,Ay:()=>h,ho:()=>u,rE:()=>r});const r="0.0.1";function s(){return Object.create(null)}function n(e){return new Promise(((t,r)=>{e.onsuccess=()=>{t(e.result)},e.onerror=()=>{r(e.error??e.transaction?.error??new Error("Request failed."))}}))}class o{name;upgReqs=[];upgIReqs=s();reqs=[];isRequested=!1;constructor(e){this.name=e}async open(e,t,r){const s=indexedDB.open(this.name,t);r&&(s.onupgradeneeded=()=>{r(s.result,s.transaction)});try{return await e(await n(s))}finally{s.result.close()}}tx(e,t,r,s){let n;return new Promise(((o,i)=>{const a=e.transaction(t,r);a.oncomplete=()=>{o(n)},a.onerror=()=>{i(a.error??new Error("Transaction failed."))};try{n=s(a)}catch(e){throw a.abort(),e}}))}addUpgIRec(e,t){this.upgIReqs[e]||(this.upgIReqs[e]=[]),this.upgIReqs[e].push(t)}version(){return this.open((e=>e.version))}objectStoreNames(){return this.open((e=>e.objectStoreNames))}objectStore(e,t,r){if(this.upgReqs.push([e,0,r=>{r.objectStoreNames.contains(e)||(t?r.createObjectStore(e,t):r.createObjectStore(e))}]),r)for(const t of r)this.addUpgIRec(e,[t.name,0,e=>{e.indexNames.contains(t.name)||e.createIndex(t.name,t.keyPath,t.options)}]);return new a(this,e,e)}deleteObjectStore(e){return this.upgReqs.push([e,1,t=>{t.objectStoreNames.contains(e)&&t.deleteObjectStore(e)}]),this.commit()}deleteIndex(e,t){return this.addUpgIRec(e,[t,1,e=>{e.indexNames.contains(t)&&e.deleteIndex(t)}]),this.commit()}isNeedToUpg(e){for(const[t,r]of this.upgReqs){const s=e.objectStoreNames.contains(t);if(0===r&&!s)return!0;if(1===r&&s)return!0}return!1}async isNeedToIUpg(e){const t=Object.keys(this.upgIReqs);return!!t.length&&this.tx(e,t,"readonly",(e=>{for(const r of t){const t=e.objectStore(r);for(const[e,s]of this.upgIReqs[r]){const r=t.indexNames.contains(e);if(0===s&&!r)return!0;if(1===s&&r)return!0}}return!1}))}async requestToCommit(e){e&&this.reqs.push(e),this.isRequested||(this.isRequested=!0,await Promise.resolve(),this.isRequested=!1,await this.commit())}async commit(){let e=0;this.upgReqs.length&&(e=await this.open((async e=>this.isNeedToUpg(e)||await this.isNeedToIUpg(e)?e.version+1:(this.upgReqs=[],this.upgIReqs=s(),await this.procReqs(e),0)))),(this.reqs.length||this.upgReqs.length)&&(this.upgReqs.length?await this.open((e=>this.procReqs(e)),e,((e,t)=>{this.procUpgReqs(e,t)})):await this.open((e=>this.procReqs(e))))}procUpgReqs(e,t){for(const[,,t]of this.upgReqs)t(e);this.upgReqs=[];for(const[e,r]of Object.entries(this.upgIReqs)){const s=t.objectStore(e);for(const[,,e]of r)e(s)}this.upgIReqs=s()}async procReqs(e){if(!this.reqs.length)return;const t=[...new Set(this.reqs.map((([e])=>e)))],r=this.reqs.every((([,e])=>0===e))?"readonly":"readwrite";await this.tx(e,t,r,(e=>{for(const[,,t]of this.reqs)t(e);this.reqs=[]}))}deleteDatabase(){return n(indexedDB.deleteDatabase(this.name))}}class i{db;osName;name;constructor(e,t,r){this.db=e,this.osName=t,this.name=r}reg(e,t){return new Promise(((r,s)=>{this.db.requestToCommit([this.osName,e,e=>{try{r(t(this.getTarget(e)))}catch(e){s(e)}}]).catch(s)}))}regq(e,t){return this.reg(e,(e=>n(t(e))))}async*regc(e,t){yield*await this.reg(e,(e=>async function*(e){for(let t;t=await n(e);)yield t}(t(e))))}count(e){return this.regq(0,(t=>t.count(e)))}get(e){return this.regq(0,(t=>t.get(e)))}getAll(e,t){return this.regq(0,(r=>r.getAll(e,t)))}getAllKeys(e,t){return this.regq(0,(r=>r.getAllKeys(e,t)))}getKey(e){return this.regq(0,(t=>t.getKey(e)))}keyPath(){return this.reg(0,(e=>e.keyPath))}openCursor(e,t){return this.regc(1,(r=>r.openCursor(e,t)))}openKeyCursor(e,t){return this.regc(1,(r=>r.openKeyCursor(e,t)))}}class a extends i{getTarget(e){return e.objectStore(this.name)}add(e,t){return this.regq(1,(r=>r.add(e,t)))}autoIncrement(){return this.reg(0,(e=>e.autoIncrement))}clear(){return this.regq(1,(e=>e.clear()))}delete(e){return this.regq(1,(t=>t.delete(e)))}deleteIndex(e){return this.db.deleteIndex(this.name,e)}index(e){return new c(this.db,this.name,e)}indexNames(){return this.reg(0,(e=>e.indexNames))}put(e,t){return this.regq(1,(r=>r.put(e,t)))}}class c extends i{getTarget(e){return e.objectStore(this.osName).index(this.name)}multiEntry(){return this.reg(0,(e=>e.multiEntry))}unique(){return this.reg(0,(e=>e.unique))}}function u(e){return new o(e)}const h={open:u};var g=t.aZ,d=t.OP,p=t.Fj,l=t.Ay,q=t.ho,m=t.rE;export{g as Idb,d as IdbIndex,p as IdbStore,l as default,q as open,m as version};